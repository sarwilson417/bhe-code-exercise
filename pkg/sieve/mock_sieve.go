// Code generated by MockGen. DO NOT EDIT.
// Source: ./sieve.go
//
// Generated by this command:
//
//	mockgen -source ./sieve.go -destination ./mock_sieve.go -package sieve
//

// Package sieve is a generated GoMock package.
package sieve

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockSieve is a mock of Sieve interface.
type MockSieve struct {
	ctrl     *gomock.Controller
	recorder *MockSieveMockRecorder
	isgomock struct{}
}

// MockSieveMockRecorder is the mock recorder for MockSieve.
type MockSieveMockRecorder struct {
	mock *MockSieve
}

// NewMockSieve creates a new mock instance.
func NewMockSieve(ctrl *gomock.Controller) *MockSieve {
	mock := &MockSieve{ctrl: ctrl}
	mock.recorder = &MockSieveMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSieve) EXPECT() *MockSieveMockRecorder {
	return m.recorder
}

// NthPrime mocks base method.
func (m *MockSieve) NthPrime(n int64) (int64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "NthPrime", n)
	ret0, _ := ret[0].(int64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// NthPrime indicates an expected call of NthPrime.
func (mr *MockSieveMockRecorder) NthPrime(n any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "NthPrime", reflect.TypeOf((*MockSieve)(nil).NthPrime), n)
}
